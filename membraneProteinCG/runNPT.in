# Title: CG membrane + protein
# Author: Yuhang Wang
# Date:   10/14/2014
# ref: Moltemplate examples/
#============================================================
# -------- REQUIREMENTS: ---------
# 1) This example requires the "USER-MISC" package.  (Use "make yes-USER-MISC")
#   http://lammps.sandia.gov/doc/Section_start.html#start_3
# 2) It also may require additional features and bug fixes for LAMMPS.
#   So, after typing "make yes-user-misc" in to the shell, ...
#   be sure to download and copy the "additional_lammps_code" from
#   http://moltemplate.org     (upper-left corner menu)
# 3) Unpack it
# 4) copy the .cpp and .h files to the src folding of your lammps installation.
# 5) Compile LAMMPS.
#
# If LAMMPS complains about an "Invalid pair_style", or "Invalid dihedral_style"
# then you made a mistake in the instructions above.
#
#============================================================

#-------------------- INITIALIATION --------------------
include		system.in.init

#-------------------- ATOM DEFINITION --------------------
read_data	system.data

#-------------------- SYSTEM SETTING --------------------
include		system.in.settings

variable	output_trajname string "my_tensile_md1.lammpstraj"
variable	output_logfilename string "my_system_log.data"

###################################################
#--------------------
# Equilibration
#--------------------
timestep	10.0


#----------------------------------------------------------------------
# In LAMMPS, "fix" means any operations that is applied to the system
#	during time-stepping or minimization.
#---------------------------------------------
# fix		ID	# user-assigned name
#		groupID	# ID of the group of atoms to be applied to
#		langevin # using Langevin thermostat
#		T_start  # starting temperature
#		T_end	 # ending tempeature
#		damping  # damping parameter (time units)
#
# fix		ID	# user-assigned name
#		groupID	# ID of the group of atoms to be applied to
#		nph	# constant N, pressure and enthalpy
#		  x P_start P_stop P_damping # external stress tensor component at start/end of run (pressure units)
#		  y P_start P_stop P_damping
#		  couple xy # couple the pressure in x and y
#----------------------------------------------------------------------


#------------------------------------------------------------
#		 Temperature
#------------------------------------------------------------
# using Langevin thermostat
#------------------------------------------------------------
variable T_start equal 300
variable T_end   equal 300
variable langevin_damping equal 120
variable langevin_seed	  equal 48279

fix 		fxLangevin	 	&
		all		 	&
		langevin 	 	&
		  ${T_start}		&
		  ${T_end} 		&
		  ${langevin_damping}	&
		  ${langevin_seed}

#------------------------------------------------------------
#		 Thermodynamics Ensemble
#------------------------------------------------------------
# using NPH ensemble
# note:
# 1. we maintain the system at zero tention using pressure
#    damping factor 1000. (i.e. "0 0 1000")
# 2. Langevin damping factor 120 corresponds to 0.12 ps damping time
#    as in Watson et. al. JCP 2011
#------------------------------------------------------------
variable	P_start equal 0. # starting pressure
variable 	P_end   equal 0. # ending   pressure
variable	P_damp  equal 1000. # pressure damping parameter

fix		NPH		&
		all		&
		nph		&
		x		&
		 ${P_start}     &
		 ${P_start}	&
		 ${P_damp}	&
		y 		&
		 ${P_start}	&
		 ${P_end}	&
		 ${P_damp}	&
		couple xy


#----------------------------------------------------------------------
# Thermodynamics Outputs
# thermo 1000 # output thermodynamics every 1000 steps
#
# Set the style and content for printing thermodynami data to the screen and log
# thermo_style	custom  # use customized list of keywords
#		  step		# timestep
#		  lx ly lz	# box length Lx, Ly, Lz
#		  press		# pressure
#		  pxx pyy pzz 
#		  pxy pxz pyz	# the 6 components of pressure tensor
#		  pe		# total potential energy
#		  temp		# temperature 
#----------------------------------------------------------------------
thermo	1000
thermo_style	custom		&
		  step		&
		  lx		&
		  ly		&
		  lz		&
		  press		&
		  pxx 		&
		  pyy		&
		  pzz		&
		  pe		&
		  temp


#------------------------------------------------------------
# RUN
#------------------------------------------------------------
# run examples:
#------------------------------
# run # kyeword values
#------------------------------
# run 10000
# run 1000000 upto
# run 100 start 0 stop 1000
# run 1000 pre no post yes
# run 100000 start 0 stop 1000000 every 1000 "print 'Protein Rg = $r'"
# run 100000 every 1000 NULL 
#------------------------------
run	100000

#------------------------------------------------------------
# write output data
#------------------------------------------------------------
write_data ${output_logfilename}

#------------------------------------------------------------
# unfix fixID # to delete a "fix"
#------------------------------------------------------------
unfix	1



#------------------------------------------------------------
# Store final cell length for strain calculation
#------------------------------------------------------------
variable L0 equal "lx"
print "========= Initial length, L0: ${L0} ================="




#================================================================================
#       NOW, Fun begins !
#================================================================================

#============================================================
# 		DEFORMATION
#============================================================
reset_timestep	0 # reset timestep count to "0"

#---------------------------------------------
# fix		ID	# user-assigned name
#		groupID	# ID of the group of atoms to be applied to
#		npt	# constant NPT integration via Nose/Hoover
#		  temp T_start T_stop T_damping # Temperature 
#		  x 
#		  drag DragFactor # DragFacor is added to the barostat/thermostat
#		  deform N # box deformation frequency (unit: steps)
#		    x  # deform along x
#		    erate # engineering strain rate (1/time-unit)
#		    units box # distance is difined using simulation box units
#		    remap x  # remap coordinates into deforming box
#		print 100 # print every 100 steps
#----------------------------------------------------------------------
fix		1			&
		all			&
		npt			&
		  temp 300 300 1	&
		  y    0   0   1	&
		  z    0   0   1	&
		  drag 1

variable sRate	equal 1.0e10
variable sRate1 equal "v_sRate / 1.0e12"

fix		2			&
		all			&
		deform 1		&
		  x			&
		  erate ${sRate1}	&
		  units  box		&
		  remap x

#------------------------------------------------------------
# Output strain and stress into a file
#------------------------------------------------------------
variable strain equal "(lx - v_L0)/v_L0"
variable p1	equal "v_strain"
variable p2	equal "-pxx/10000"
variable p3	equal "-pyy/10000"
variable p4	equal "-pzz/10000"

variable output_filename  string "Al_SC_100.deform1.txt"

fix		def1			&
		all			&
		print	100		& 
		  "${p1} ${p2} ${p3} ${p4}" &
		  file ${output_filename}   &
		  screen no

#------------------------------------------------------------
# dump		ID		# user assigned name for the dump
#		group-ID	# ID of the group of atoms to be in the output 
#		custom 250	# use customized output style and output every 250 steps
#
# dump_modify   ID              # previously defined dump ID
#		element Al	# change element name to Al

# id:		atom ID
# mol:		molecule ID
# type:		atom type
# x, y, z:	unscaled atom coordinates
# ix, iy, iz:	box image that the atom is in
#------------------------------------------------------------
dump		1			&
		all			&
		custom 250 		&
		${output_trajname}    	&
		id 			&
		mol			&
		type			&
		x			&
		y			&
		z			&
		ix			&
		iy			&
		iz






#------------------------------------------------------------
# Display thermodynamics quantities
# step:		timestep
# temp:		temperature
# pe:		potential energy
# etotal:	total energy
# vol:		volume
# epair:	pairwise energy (vdw + Elec + long range kspace energy + vdW long range tail correction)
# ebond:	bond energy
# eangle:	angle energy
# press:	pressure
#------------------------------------------------------------
thermo	1000 # print every 1000 steps
thermo_style	custom			&
		  step			&
		  temp			&
		  pe			&
		  etotal		&
		  vol			&
		  epair			&
		  eangle		&
		  press

#------------------------------------------------------------
# Run the deformed simulations
#------------------------------------------------------------
run	200


#------------------------------------------------------------
print "==================== All done ===================="
#------------------------------------------------------------
