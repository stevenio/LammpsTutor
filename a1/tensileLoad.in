# Title: Uniaxial tensile loading
# Author: Yuhang Wang
# Date:   10/13/2014
# ref: https://icme.hpc.msstate.edu/mediawiki/index.php/Uniaxial_Tension


#-------------------- INITIALIATION --------------------
units		metal # "metal" means g/mol, angstroms, ps, eV, Kelvin, bars, cm
dimension	3
boundary	p p p # periodic boundar conditions
atom_style 	atomic # "atomic" for coarse-grain liquids, solids and metals

variable	latparam equal 4.05

#-------------------- ATOM DEFINITION --------------------
lattice		fcc ${latparam}
region 		whole block 0 10 0 10 0 10
create_box	1 whole
lattice 	fcc ${latparam} orient x 1 0 0 orient y 0 1 0 orient z 0 0 1
create_atoms	1 region whole

#-------------------- ATOM DEFINITION --------------------
# Force Field formulation choices
pair_style	eam/alloy  

# force field coefficients
#------------------------------------------------------------
# pair_coeff	i # atom type-i
#		j # atom type-j
#		file args #force field coefficients file name and section
#------------------------------------------------------------
pair_coeff	* &
		* &
		Al99.eam.alloy Al 

#-------------------- Compute --------------------
#------------------------------------------------------------
# compute	ID	# user-assigned ID
#		GroupID	# ID for the group of atoms to be applied to
#		style args
#------------------------------------------------------------

# compute centro-symmetry parameter for each atom
compute		csym		&
		all		&
		centro/atom fcc 

# compute potential energy of each atom
# "pe/atom" means potential energy for each atom
compute		peratom &
		all     &
		pe/atom

###################################################
#--------------------
# Equilibration
#--------------------
variable velocity_seed equal 12345
variable velocity_temperature equal 300 # Kelvin

reset_timestep  0
timestep	0.001

#----------------------------------------------------------------------
# velocity	groupID &
#		create T seed	# create an ensemble of velocities
#		mom yes		# make overall linear momentum zero
#		rot no		# not enforcing overal angular momentum to be zero
#----------------------------------------------------------------------
velocity 	all 						&
		create ${velocity_temperature} ${velocity_seed} &
	 	mom yes 					&
		rot no

#----------------------------------------------------------------------
# In LAMMPS, "fix" means any operations that is applied to the system
#	during time-stepping or minimization.
#---------------------------------------------
# fix		ID	# user-assigned name
#		groupID	# ID of the group of atoms to be applied to
#		npt	# constant NPT integration via Nose/Hoover
#		  temp T_start T_stop T_damping # Temperature 
#		  iso  P_start P_stop P_damping # Pressure
#		  drag DragFactor # DragFacor is added to the barostat/thermostat
#----------------------------------------------------------------------
fix 		1		 &
		all		 &
		npt		 &
		  temp 300 300 1 &
	          iso  0   0   1 &
		  drag 1


#----------------------------------------------------------------------
# Thermodynamics Outputs
# thermo 1000 # output thermodynamics every 1000 steps
#
# Set the style and content for printing thermodynami data to the screen and log
# thermo_style	custom  # use customized list of keywords
#		  step		# timestep
#		  lx ly lz	# box length Lx, Ly, Lz
#		  press		# pressure
#		  pxx pyy pzz 
#		  pxy pxz pyz	# the 6 components of pressure tensor
#		  pe		# total potential energy
#		  temp		# temperature 
#----------------------------------------------------------------------
thermo	1000
thermo_style	custom		&
		  step		&
		  lx		&
		  ly		&
		  lz		&
		  press		&
		  pxx 		&
		  pyy		&
		  pzz		&
		  pe		&
		  temp


#------------------------------------------------------------
# RUN
#------------------------------------------------------------
# run examples:
#------------------------------
# run # kyeword values
#------------------------------
# run 10000
# run 1000000 upto
# run 100 start 0 stop 1000
# run 1000 pre no post yes
# run 100000 start 0 stop 1000000 every 1000 "print 'Protein Rg = $r'"
# run 100000 every 1000 NULL 
#------------------------------
run	20000
#------------------------------------------------------------
# unfix fixID # to delete a "fix"
#------------------------------------------------------------
unfix	1



#------------------------------------------------------------
# Store final cell length for strain calculation
#------------------------------------------------------------
variable L0 equal "lx"
print "========= Initial length, L0: ${L0} ================="




#================================================================================
#       NOW, Fun begins !
#================================================================================

#============================================================
# 		DEFORMATION
#============================================================
reset_timestep	0 # reset timestep count to "0"

#---------------------------------------------
# fix		ID	# user-assigned name
#		groupID	# ID of the group of atoms to be applied to
#		npt	# constant NPT integration via Nose/Hoover
#		  temp T_start T_stop T_damping # Temperature 
#		  x 
#		  drag DragFactor # DragFacor is added to the barostat/thermostat
#		  deform N # box deformation frequency (unit: steps)
#		    x  # deform along x
#		    erate # engineering strain rate (1/time-unit)
#		    units box # distance is difined using simulation box units
#		    remap x  # remap coordinates into deforming box
#		print 100 # print every 100 steps
#----------------------------------------------------------------------
fix		1			&
		all			&
		npt			&
		  temp 300 300 1	&
		  y    0   0   1	&
		  z    0   0   1	&
		  drag 1

variable sRate	equal 1.0e10
variable sRate1 equal "v_sRate / 1.0e12"

fix		2			&
		all			&
		deform 1		&
		  x			&
		  erate ${sRate1}	&
		  units  box		&
		  remap x

#------------------------------------------------------------
# Output strain and stress into a file
#------------------------------------------------------------
variable strain equal "(lx - v_L0)/v_L0"
variable p1	equal "v_strain"
variable p2	equal "-pxx/10000"
variable p3	equal "-pyy/10000"
variable p4	equal "-pzz/10000"

variable output_filename  string "Al_SC_100.deform1.txt"

fix		def1			&
		all			&
		print	100		& 
		  "${p1} ${p2} ${p3} ${p4}" &
		  file ${output_filename}   &
		  screen no
#------------------------------------------------------------
# Use cfg for AtomEye
# dump		ID # user-defined name for the dump
#		GroupID 	# ID of the group of atoms to be dumped
#		cfg 250		# same syntax as "custom" sytle and writes CFG formated file
# dump_modify   ID              # previously defined dump ID
#		element Al	# change element name to Al
#------------------------------------------------------------
dump		1			&
		all			&
		cfg 250 		&
		dump.tensile_*.cfg 	&
		mass type xs ys zs        &
		c_csym			&
		c_peratom		&
		fx fy fz		

dump_modify	1			&
		element Al		




#------------------------------------------------------------
# Display thermodynamics
#------------------------------------------------------------
thermo	1000 # print every 1000 steps
thermo_style	custom			&
		  step			&
		  v_strain		&
		  temp			&
		  v_p2			&
		  v_p3			&
		  v_p4			&
		  ke			&
		  pe			&
		  press

#------------------------------------------------------------
# Run the deformed simulations
#------------------------------------------------------------
run	20000


#------------------------------------------------------------
print "==================== All done ===================="
#------------------------------------------------------------
